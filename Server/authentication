int test=0;
    /* Server, wait for connections */
    net_fd = sock_fd;
    if(setsockopt(sock_fd, SOL_SOCKET, SO_REUSEADDR, (char *)&optval, sizeof(optval)) < 0){
      perror("setsockopt()");
      exit(1);
    }
    
    memset(&local, 0, sizeof(local));
    local.sin_family = AF_INET;
    local.sin_addr.s_addr = htonl(INADDR_ANY);
    local.sin_port = htons(port);
    if (bind(sock_fd, (struct sockaddr*) &local, sizeof(local)) < 0){
      perror("bind()");
      exit(1);
    }
    int readl = recvfrom(sock_fd,buffer,sizeof(buffer),0,(struct sockaddr*)&remotelen,&remotelen);
    if(readl<0) perror("recvfrom");
    
    printf("Got Packet :%s\n",buffer);
    if((fp = fopen("Pass.txt","r")) == NULL)
		{
			printf("\nError opening file");
			exit(1);
		}

    while(!feof(fp))
    {
    	 if(fscanf(fp,"%s", hash1)<0)
            perror("fscanf");
         if(strncmp(buffer, hash1, 32)==0)
         {
            printf("Correct password \n");
            test=1;
         }
         else
         {
            printf("Incorrect password \n");
         }
    }
    fclose(fp);
    if(test == 0)
    {
        printf("User not present");
        exit(1);
    }
    do_debug(" Server Client Authenticated \n");
    /* wait for connection request */
    remotelen = sizeof(remote);
    memset(&remote, 0, remotelen);

    do_debug("SERVER READY \n");
